stages:
  - build
  - package
  - deploy
build:
  image: golang:1.17
  stage: build
  only:
    - develop
    - tags
  script:
    - env GOPROXY=https://goproxy.cn,https://goproxy.io,direct CGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build -o mio .
  artifacts:
    paths:
      - mio
package:
  stage: package
  only:
    - develop
    - tags
  dependencies:
    - build
  script:
    - export IMAGE_TAG=${CI_BUILD_DOCKER_URL}mioyingtech/mio-go:$CI_COMMIT_REF_NAME
    - docker login -u $CI_BUILD_DOCKER_USER -p $CI_BUILD_TOKEN $CI_BUILD_DOCKER_URL
    - docker build -t $IMAGE_TAG -f ./build/Dockerfile .
    - docker push $IMAGE_TAG
deploy-dev:
  stage: deploy
  environment:
    name: develop
    url: https://godev-api.miotech.com
  tags:
    - k8s
  only:
    - develop
  before_script:
    - mkdir -p $HOME/.kube
    - echo -n $kube_config_sh | base64 -d > $HOME/.kube/config
  script:
    - sh ./build/deploy.sh $CI_COMMIT_REF_NAME

deploy-prod:
  stage: deploy
  environment:
    name: production
    url: https://go-api.miotech.com
  tags:
    - k8s
  only:
    - tags
  before_script:
    - mkdir -p $HOME/.kube
    - echo -n $kube_config_sh | base64 -d > $HOME/.kube/config
  script:
    - sh ./build/deploy.sh $CI_COMMIT_REF_NAME