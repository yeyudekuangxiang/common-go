kind: Deployment
apiVersion: apps/v1
metadata:
  name: godev
  namespace: dev
  labels:
    app: godev
  annotations:
    deployment.kubernetes.io/revision: '1'
    kubesphere.io/creator: leoliu
spec:
  replicas: 2
  selector:
    matchLabels:
      app: godev
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: godev
    spec:
      containers:
        - name: container-4neum4
          image: 'hub-cn.miotech.com/mioyingtech/mio-dev:develop'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      imagePullSecrets:
        - name: miotech-registry-cn
      affinity: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  name: mio-dev-svc #TODO: to specify your service name
  labels:
    app: mio-dev-svc
spec:
  selector:
    app: mio-dev #TODO: change label selector to match your backend pod
  ports:
    - port: 80 #TODO: choose an unique port on each node to avoid port conflict
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mio-dev-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: godev-api.miotech.com
      http:
        paths:
          - backend:
              serviceName: mio-dev-svc
              servicePort: 80
            path: /mio-dev/?(.*)
  tls:
    - hosts:
        - godev-api.miotech.com
      secretName: godev-api.miotech.com